name: Build APP

on:
  push:
    branches: [ "master"]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      
      # 设置JDK环境
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle
      
      # 设置Gradle权限
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      # 解码并创建密钥库文件
      - name: Decode Keystore
        env:
          ENCODED_KEYSTORE: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          if [ -n "$ENCODED_KEYSTORE" ]; then
            # 确保创建在项目根目录下
            echo "$ENCODED_KEYSTORE" | base64 --decode > zerotierfix.keystore
            ls -la zerotierfix.keystore
          else
            echo "No keystore found, will build unsigned APK"
          fi
      
      # 构建Debug APK
      - name: Build Debug APK
        run: ./gradlew assembleDebug
      
      # 构建Release APK
      - name: Build Release APK
        env:
          # 指定完整路径
          ZEROTIERFIX_KEYSTORE_FILE: ${{ github.workspace }}/zerotierfix.keystore
          ZEROTIERFIX_KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          ZEROTIERFIX_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          ZEROTIERFIX_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew assembleRelease
      
      # 上传Debug构建产物
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk
      
      # 上传Release构建产物
      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release.apk
